//
//  SettersViewModel.swift
//  SwiftUI_Firebase_MVVM_Implementation_Demos_2024
//
//  Created by Devin Grischow on 3/4/24.
//

import Foundation
import FirebaseFirestore

//This is a view model for the setters views
class SettersViewModel:ObservableObject{
    
    @Published var settersModel = SettersModel()
    
    
    //MARK: Set Book To Firebase
    
    ///Takes a book *title* String variable and makes a new document in firebase for the book. The *DocumentID* will be randomly generated by Firebase
    func addBooktoFirebase(bookTitle:String){
        
        
        //Create a Firestore object for the function to use
        let db = Firestore.firestore()

        ///A new **Book** document to add to firebase. /
        ///The Document will have *1 field* on it, *bookName*, which will be whatever book NAME the user enters.
        let newBook = ["bookName":bookTitle]
        
        
        //MARK: ADD the Book To Firebase
        //With the newBook Document ready, Now Add the book to the "Books" Collection.
        
        //**IMPORTANT: Before adding/Using the collection, the collection being references *MUST* Be created in Firestore in the web console.
        
        ///Add a *New Book* to the **Books** Collection in Firebase.
        db.collection("Books").addDocument(data: newBook)

    }
    
    //set to Travel Values
    func setToTravelValues(newTravelPlace:TravelPlace){
        settersModel.toSetTravelPlace = newTravelPlace
    }
    
    
    //MARK: Add Travel Destination
    //Uses the values from the toSetTravel to add to firebase
    
    func addTravelDestination() async{
            
            let db = Firestore.firestore()
            
            
            //Use a **DO CATCH** block to catch any errors that might arrise while adding the value to firebase.
            do{
                ///A new **Travel Destination** document to add to firebase. /
                ///The Document will have *3 fields* on it,
                let newTravelDestination = [
                    "travelPlaceName":settersModel.toSetTravelPlace.placeName,
                    "travelDestination": settersModel.toSetTravelPlace.placeLocation,
                    "travelValue":settersModel.toSetTravelPlace.placeValue
                    
                ] as [String : Any]
                
                //MARK: ADD the Travel Place To Firebase
                //With the newTravelDestination Document ready, Now Add the book to the "TravelDestinations" Collection.


                //**IMPORTANT: Before adding/Using the collection, the collection being references *MUST* Be created in Firestore in the web console.
                
                ///Add a *New Travel Place* to the **TravelDestinations** Collection in Firebase with a ID based off of the name 
                try await db.collection("TravelDestinations").document(settersModel.toSetTravelPlace.placeID).setData(newTravelDestination)
                
                
                
            }catch{
                print(error.localizedDescription, "A Error Occured when setting a new Travel Place")
            }
            
            
            
        }
    
        
        
    
    
    
}
